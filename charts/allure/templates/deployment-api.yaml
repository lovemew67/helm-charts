{{- $fullName := include "allure.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-api
  labels:
    {{- include "allure-api.labels" . | nindent 4 }}
{{- if .Values.deploymentAnnotations }}
  annotations:
{{ toYaml .Values.deploymentAnnotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "allure-api.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "allure-api.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: allure-api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          {{- with .Values.api.image }}
          image: "{{- if .registry -}}{{ .registry }}/{{ .repository }}{{ else }}{{ .repository }}{{- end -}}:{{ .tag }}{{- if (.digest) -}} @{{.digest}} {{- end -}}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ $fullName }}-api
            - secretRef:
                name: {{ .Values.credentials }}
          volumeMounts:
            - name: reports-volume
              mountPath: /app/projects
          ports:
            - name: api
              containerPort: 5050
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /allure-docker-service/version
              port: api
          readinessProbe:
            httpGet:
              path: /allure-docker-service/version
              port: api
          {{- with .Values.api.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: volume-permissions
          image: busybox:1.28
          imagePullPolicy: {{ .pullPolicy }}
          command:
            - 'sh'
            - '-c'
            - 'mkdir -p "/app/projects"; chown -R 1000:1000 "/app/projects"; find "/app/projects" -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R 1000:1000; rm -rf "/app/projects/lost+found"'
          volumeMounts:
            - name: reports-volume
              mountPath: /app/projects
      volumes:
        - name: reports-volume
          {{- if not .Values.volume.enabled }}
          emptyDir: {}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.existingClaim | default (printf "%s-data" $fullName) }}
          {{- end }}
    {{- if .Values.ui.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.ui.nodeSelector | nindent 8 }}
    {{- end }}

